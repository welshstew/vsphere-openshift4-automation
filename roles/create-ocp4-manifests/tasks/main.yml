---
- block:
  - include: setup.yml
  - name: Download the openshift 4 installer
    unarchive:
      src: "{{openshift_installer_url}}"
      dest: "{{ tmpdir }}"
      remote_src: yes
  - name: set facts
    set_fact:
      ssh_key: "{{ lookup('file', ssh_key_file) }}"

# had to do a cat and stdout due to ansible changing the json quotes in the file
  - name: read file
    shell: "cat {{pull_secret_file}}"
    register: pull_secret
  - debug: var=pull_secret.stdout

  - name: Create the disconnected install-config.yaml
    template:
      src: ../templates/install-config-disconnected.yaml.j2
      dest: "{{ tmpdir }}/install-config.yaml"
    when: disconnected.mirror is defined

  - name: Create the install-config.yaml
    template:
      src: ../templates/install-config.yaml.j2
      dest: "{{ tmpdir }}/install-config.yaml"
    when: disconnected.mirror is not defined

  - name: Backup Config
    copy:
      src: "{{ tmpdir }}/install-config.yaml"
      dest: "{{ tmpdir }}/install-config.yaml.backup"

  - name: Create the Manifests
    shell: "{{ tmpdir }}/openshift-install create manifests"
    args:
      chdir: "{{ tmpdir }}"

  - name: Remove the Kubernetes manifest files that define the control plane machines and compute machineSets
    shell: "rm -f {{ tmpdir }}/openshift/99_openshift-cluster-api_master-machines-*.yaml {{ tmpdir }}/openshift/99_openshift-cluster-api_worker-machineset-*.yaml"
    args:
      chdir: "{{ tmpdir }}"

  - name: Create Ignition Configs
    shell: "{{ tmpdir }}/openshift-install create ignition-configs"
    args:
      chdir: "{{ tmpdir }}"

  - name: Create Append Bootstrap Config
    shell: "export IGNITION_URL={{ignition_base_url}}/bootstrap.ign; envsubst < {{playbook_dir}}/roles/create-ocp4-manifests/templates/append.ign.j2 > {{ tmpdir }}/append-bootstrap.ign"
  
  - name: Create Append Master Config
    shell: "export IGNITION_URL={{ignition_base_url}}/master.ign; envsubst < {{playbook_dir}}/roles/create-ocp4-manifests/templates/append.ign.j2 > {{ tmpdir }}/append-master.ign"
  
  - name: Create Append Worker Config
    shell: "export IGNITION_URL={{ignition_base_url}}/worker.ign; envsubst < {{playbook_dir}}/roles/create-ocp4-manifests/templates/append.ign.j2 > {{ tmpdir }}/append-worker.ign"

  - name: Move ignition configs to the apache serving dir
    copy:
      src: "{{ tmpdir }}/{{item}}.ign"
      dest: "{{ ignition_file_destination }}"
    with_items:
      - master
      - bootstrap
      - worker

  - name: Base64 encode the append ignition configs
    shell: |
      for i in append-bootstrap append-master append-worker
      do
      base64 -w0 < $i.ign > $i.64
      done
    args:
      chdir: "{{ tmpdir }}"

  - name: Set facts for the ignition file locations
    set_fact:
      append_master_ignition_64_file: "{{ tmpdir }}/append-master.64"
      append_bootstrap_ignition_64_file: "{{ tmpdir }}/append-bootstrap.64"
      append_worker_ignition_64_file: "{{ tmpdir }}/append-worker.64"

  - name: Set facts for the VM Creation
    set_fact:
      append_master_ignition_64: "{{ lookup('file', append_master_ignition_64_file) }}"
      append_bootstrap_ignition_64: "{{ lookup('file', append_bootstrap_ignition_64_file) }}"
      append_worker_ignition_64: "{{ lookup('file', append_worker_ignition_64_file) }}"

  - name: Copy the kubeconfig to local kube folder
    copy:
      src: "{{tmpdir}}/auth/kubeconfig"
      dest: "~/.kube/config"

  - name: Copy kubeadmin-password to home directory
    copy:
      src: "{{tmpdir}}/auth/kubeadmin-password"
      dest: "~/.kubeadmin-password"

